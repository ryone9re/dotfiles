[[plugins]]
repo = 'Shougo/ddc.vim'
on_event = 'InsertEnter'
depends = ['denops.vim']
hook_source = '''
  call ddc#custom#patch_global('sources', ['around'])
  call ddc#custom#patch_global('sourceOptions', {
    \ '_': {
    \   'matchers': ['matcher_head'],
    \   'sorters': ['sorter_rank']},
    \ 'around': {
    \   'mark': 'A',
    \   'maxSize': 500 },
    \ 'nvim-lsp': {
    \   'mark': 'lsp',
    \   'forceCompletionPattern': '\.\w*|:\w*|->\w*' },
    \ })
  call ddc#enable()
'''

[[plugins]]
repo = 'Shougo/ddc-around'
on_source = 'ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-matcher_head'
on_source = 'ddc.vim'

[[plugins]]
repo = 'Shougo/ddc-sorter_rank'
on_source = 'ddc.vim'

[[plugins]]
repo = 'LumaKernel/ddc-file'

[[plugins]]
repo = 'Shougo/ddc-converter_remove_overlap'

[[plugins]]
repo = 'Shougo/ddc-nvim-lsp'
on_source = 'ddc.vim'

[[plugins]]
repo = 'neovim/nvim-lspconfig'
on_event = 'BufEnter'
hook_source= '''
  lua << EOF
  local lsp_installer = require("nvim-lsp-installer")

  lsp_installer.settings({
    ui = {
      icons = {
        server_installed = '◍',
        server_pending = '◍',
        server_uninstalled = '◍',
      },
      keymaps = {
        toggle_server_expand = '<CR>',
        install_server = 'i',
        update_server = 'u',
        uninstall_server = 'x',
      },
    },
  })

  lsp_installer.on_server_ready(function(server)
    local opts = {}
    opts.on_attach = function(client,buffer_number)
      print(vim.inspect(client))
      print(buffer_number)
    end
    server:setup(opts)
  end)
'''

[[plugins]]
repo = 'williamboman/nvim-lsp-installer'
on_source = 'nvim-lspconfig'

[[plugins]]
repo = 'matsui54/denops-popup-preview.vim'
hook_source = '''
  call popup_preview#enable()
'''

[[plugins]]
repo = 'matsui54/denops-signature_help'
hook_source = '''
  call signature_help#enable()
'''
